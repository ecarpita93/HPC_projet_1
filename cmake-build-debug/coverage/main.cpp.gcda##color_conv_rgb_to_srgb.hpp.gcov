        -:    0:Source:/home/edd993/CLionProjects/hdr_generator/include/colors/color_conv_rgb_to_srgb.hpp
        -:    0:Graph:/home/edd993/CLionProjects/hdr_generator/cmake-build-debug/CMakeFiles/hdr_generator.dir/main.cpp.gcno
        -:    0:Data:/home/edd993/CLionProjects/hdr_generator/cmake-build-debug/CMakeFiles/hdr_generator.dir/main.cpp.gcda
        -:    0:Runs:1
        -:    1:/*
        -:    2:
        -:    3:PICCANTE
        -:    4:The hottest HDR imaging library!
        -:    5:http://vcg.isti.cnr.it/piccante
        -:    6:
        -:    7:Copyright (C) 2014
        -:    8:Visual Computing Laboratory - ISTI CNR
        -:    9:http://vcg.isti.cnr.it
        -:   10:First author: Francesco Banterle
        -:   11:
        -:   12:This Source Code Form is subject to the terms of the Mozilla Public
        -:   13:License, v. 2.0. If a copy of the MPL was not distributed with this
        -:   14:file, You can obtain one at http://mozilla.org/MPL/2.0/.
        -:   15:
        -:   16:*/
        -:   17:
        -:   18:#ifndef PIC_COLORS_COLOR_CONV_RGB_TO_SRGB_HPP
        -:   19:#define PIC_COLORS_COLOR_CONV_RGB_TO_SRGB_HPP
        -:   20:
        -:   21:#include "../colors/color_conv.hpp"
        -:   22:
        -:   23:namespace pic {
        -:   24:
        -:   25:/**
        -:   26: * @brief The ColorConvRGBtosRGB class
        -:   27: */
        -:   28:class ColorConvRGBtosRGB: public ColorConv
        -:   29:{
        -:   30:protected:
        -:   31:
        -:   32:    float a, a_plus_1, gamma, gamma_inv;
        -:   33:
        -:   34:public:
        -:   35:
        -:   36:    /**
        -:   37:     * @brief ColorConvRGBtosRGB
        -:   38:     */
        -:   39:    ColorConvRGBtosRGB()
        -:   40:    {
        -:   41:        gamma = 2.4f;
        -:   42:        gamma_inv = 1.0f / gamma;
        -:   43:        a = 0.055f;
        -:   44:        a_plus_1 = 1.0f + a;
        -:   45:    }
        -:   46:
        -:   47:    /**
        -:   48:     * @brief direct
        -:   49:     * @param colIn
        -:   50:     * @param colOut
        -:   51:     */
    #####:   52:    void direct(float *colIn, float *colOut)
        -:   53:    {
    #####:   54:        for(int i = 0; i < 3; i++) {
    %%%%%:   54-block  0
    %%%%%:   54-block  1
    %%%%%:   54-block  2
    #####:   55:            if(colIn[i] > 0.0031308f) {
    %%%%%:   55-block  0
    #####:   56:                colOut[i] = a_plus_1 * powf(colIn[i], gamma_inv) - a;
    %%%%%:   56-block  0
        -:   57:            } else {
    #####:   58:                colOut[i] = 12.92f * colIn[i];
    %%%%%:   58-block  0
        -:   59:            }
        -:   60:        }
    #####:   61:    }
        -:   62:
        -:   63:    /**
        -:   64:     * @brief inverse
        -:   65:     * @param colIn
        -:   66:     * @param colOut
        -:   67:     */
    #####:   68:    void inverse(float *colIn, float *colOut)
        -:   69:    {
    #####:   70:        for(int i = 0; i < 3; i++) {
    %%%%%:   70-block  0
    %%%%%:   70-block  1
    %%%%%:   70-block  2
    #####:   71:            if(colIn[i] > 0.04045f) {
    %%%%%:   71-block  0
    #####:   72:                colOut[i] = powf((colIn[i] + a) / a_plus_1, gamma);
    %%%%%:   72-block  0
        -:   73:            } else {
    #####:   74:                colOut[i] = colIn[i] / 12.92f;
    %%%%%:   74-block  0
        -:   75:            }
        -:   76:        }
    #####:   77:    }
        -:   78:};
        -:   79:
        -:   80:} // end namespace pic
        -:   81:
        -:   82:#endif /* PIC_COLORS_COLOR_SPACE_XYZ_HPP */
        -:   83:
